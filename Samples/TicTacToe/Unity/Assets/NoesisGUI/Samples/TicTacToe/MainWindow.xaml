<UserControl x:Class="TicTacToe.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
  xmlns:local="clr-namespace:TicTacToe"
  xmlns:noesis="clr-namespace:NoesisGUIExtensions"
  FontFamily="Fonts/#Janda Manatee Solid"
  Foreground="White">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="LogoResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Color x:Key="Color.Player1.Bg1">#FFFFFF64</Color>
            <Color x:Key="Color.Player1.Bg2">#FF998000</Color>
            <Color x:Key="Color.Player1.Bd">#FFAD9C06</Color>
            <Color x:Key="Color.Player2.Bg1">#FF00FFF3</Color>
            <Color x:Key="Color.Player2.Bg2">#FF008899</Color>
            <Color x:Key="Color.Player2.Bd">#FF098FAA</Color>
            <Color x:Key="Color.LightBlue">#FF6BABE0</Color>
            <Color x:Key="Color.DarkBlue">#FF194F7D</Color>
            <SolidColorBrush x:Key="Brush.Player1" Color="{StaticResource Color.Player1.Bg2}"/>
            <SolidColorBrush x:Key="Brush.Player1.Hi" Color="{StaticResource Color.Player1.Bd}"/>
            <SolidColorBrush x:Key="Brush.Player2" Color="{StaticResource Color.Player2.Bg2}"/>
            <SolidColorBrush x:Key="Brush.Player2.Hi" Color="{StaticResource Color.Player2.Bd}"/>
            <SolidColorBrush x:Key="Brush.LightBlue" Color="{StaticResource Color.LightBlue}"/>
            <SolidColorBrush x:Key="Brush.DarkBlue" Color="{StaticResource Color.DarkBlue}"/>
            <ControlTemplate x:Key="Template.Cell" TargetType="ToggleButton">
                <ControlTemplate.Resources>
                    <SolidColorBrush x:Key="Brush.Player1.Bd" Color="{StaticResource Color.Player1.Bd}"/>
                    <LinearGradientBrush x:Key="Brush.Player1.Bg" StartPoint="0,0" EndPoint="0.4,1">
                        <GradientStop Color="{StaticResource Color.Player1.Bg1}" Offset="0"/>
                        <GradientStop Color="{StaticResource Color.Player1.Bg2}" Offset="1"/>
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="Brush.Player2.Bd" Color="{StaticResource Color.Player2.Bd}"/>
                    <LinearGradientBrush x:Key="Brush.Player2.Bg" StartPoint="0,0" EndPoint="0.4,1">
                        <GradientStop Color="{StaticResource ResourceKey=Color.Player2.Bg1}" Offset="0"/>
                        <GradientStop Color="{StaticResource ResourceKey=Color.Player2.Bg2}" Offset="1"/>
                    </LinearGradientBrush>
                    <TransformGroup x:Key="Transform.Default">
                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </ControlTemplate.Resources>
                <Border>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <BackEase EasingMode="EaseOut"/>
                                    </VisualTransition.GeneratedEasingFunction>
                                </VisualTransition>
                                <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </VisualTransition.GeneratedEasingFunction>
                                </VisualTransition>
                                <VisualTransition GeneratedDuration="0:0:0.2" To="Pressed">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <BackEase EasingMode="EaseOut"/>
                                    </VisualTransition.GeneratedEasingFunction>
                                </VisualTransition>
                                <VisualTransition From="Pressed" GeneratedDuration="0:0:0.2">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </VisualTransition.GeneratedEasingFunction>
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Over">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Over">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Over">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Over">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition GeneratedDuration="0:0:0.1" To="Checked">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <BackEase EasingMode="EaseOut"/>
                                    </VisualTransition.GeneratedEasingFunction>
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Unchecked">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Check">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Check">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Check">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Checked">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Check">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Check">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Check">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid Margin="10" Background="Transparent">
                        <Grid x:Name="Over" Margin="10" Opacity="0" RenderTransformOrigin="0.5,0.5" RenderTransform="{StaticResource Transform.Default}">
                            <Path x:Name="OverCircle" Data="M33.625557,10 C20.577522,10 10,20.577522 10,33.625557 10,46.673588 20.577522,57.25111 33.625557,57.25111 46.673588,57.25111 57.25111,46.673588 57.25111,33.625557 57.25111,20.577522 46.673588,10 33.625557,10 z M33.625557,0 C52.196438,0 67.251114,15.054674 67.251114,33.625557 67.251114,52.196438 52.196438,67.251114 33.625557,67.251114 15.054674,67.251114 0,52.196438 0,33.625557 0,15.054674 15.054674,0 33.625557,0 z"
                                  Stretch="Fill" Visibility="Hidden" Stroke="{StaticResource Brush.Player1.Bd}" Fill="{StaticResource Brush.Player1.Bg}"/>
                            <Path x:Name="OverCross" Data="M74.720436,26.45961 C78.701971,27.233202 81.110001,29.540507 81.791504,33.530678 L61.196625,54.125557 81.791504,74.720436 C81.478405,78.626584 79.167421,81.0185 74.720436,81.791504 L54.125557,61.196625 33.530678,81.791504 C29.166815,80.893278 26.853609,78.504404 26.45961,74.720436 L47.054489,54.125557 26.45961,33.530678 C26.90309,29.472363 29.324195,27.172314 33.530678,26.45961 L54.125557,47.054489 z"
                                  Stretch="Fill" Visibility="Hidden" Stroke="{StaticResource Brush.Player2.Bd}" Fill="{StaticResource Brush.Player2.Bg}"/>
                        </Grid>
                        <Grid x:Name="Check" Margin="10" Opacity="0" RenderTransformOrigin="0.5,0.5" RenderTransform="{StaticResource Transform.Default}">
                            <Path x:Name="CheckCircle" Data="M33.625557,10 C20.577522,10 10,20.577522 10,33.625557 10,46.673588 20.577522,57.25111 33.625557,57.25111 46.673588,57.25111 57.25111,46.673588 57.25111,33.625557 57.25111,20.577522 46.673588,10 33.625557,10 z M33.625557,0 C52.196438,0 67.251114,15.054674 67.251114,33.625557 67.251114,52.196438 52.196438,67.251114 33.625557,67.251114 15.054674,67.251114 0,52.196438 0,33.625557 0,15.054674 15.054674,0 33.625557,0 z"
                                  Stretch="Fill" Visibility="Hidden" Stroke="{StaticResource Brush.Player1.Bd}" Fill="{StaticResource Brush.Player1.Bg}"/>
                            <Path x:Name="CheckCross" Data="M74.720436,26.45961 C78.701971,27.233202 81.110001,29.540507 81.791504,33.530678 L61.196625,54.125557 81.791504,74.720436 C81.478405,78.626584 79.167421,81.0185 74.720436,81.791504 L54.125557,61.196625 33.530678,81.791504 C29.166815,80.893278 26.853609,78.504404 26.45961,74.720436 L47.054489,54.125557 26.45961,33.530678 C26.90309,29.472363 29.324195,27.172314 33.530678,26.45961 L54.125557,47.054489 z"
                                  Stretch="Fill" Visibility="Hidden" Stroke="{StaticResource Brush.Player2.Bd}" Fill="{StaticResource Brush.Player2.Bg}"/>
                        </Grid>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="IsEnabled" Value="False"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding Player}" Value="Player1">
                        <Setter Property="Visibility" Value="Visible" TargetName="OverCircle"/>
                        <Setter Property="Visibility" Value="Visible" TargetName="CheckCircle"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Player}" Value="Player2">
                        <Setter Property="Visibility" Value="Visible" TargetName="OverCross"/>
                        <Setter Property="Visibility" Value="Visible" TargetName="CheckCross"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="Style.Cell" TargetType="ToggleButton">
                <Setter Property="Template" Value="{StaticResource Template.Cell}"/>
            </Style>
            <Style x:Key="Style.Board" TargetType="UniformGrid">
                <Setter Property="IsEnabled" Value="False"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Status}" Value="Playing">
                        <Setter Property="IsEnabled" Value="True"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <ControlTemplate x:Key="Template.Button.Start" TargetType="Button">
                <Border x:Name="Bd" CornerRadius="10" RenderTransformOrigin="0.5,0.5">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#CC1D5483" Offset="0"/>
                            <GradientStop Color="#CC164368" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition GeneratedDuration="0:0:0.3" To="Disabled">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <BackEase EasingMode="EaseIn"/>
                                    </VisualTransition.GeneratedEasingFunction>
                                </VisualTransition>
                                <VisualTransition GeneratedDuration="0:0:0.2" To="Normal">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <CubicEase EasingMode="EaseInOut"/>
                                    </VisualTransition.GeneratedEasingFunction>
                                </VisualTransition>
                                <VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <BackEase EasingMode="EaseOut"/>
                                    </VisualTransition.GeneratedEasingFunction>
                                </VisualTransition>
                                <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </VisualTransition.GeneratedEasingFunction>
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Normal">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Bd">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Host">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Host">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Host">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="HostBd">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.3"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="HostBd">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.3"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed"/>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Host">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Host">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Bd">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="Bd">
                                        <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border x:Name="HostBd" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <ContentPresenter x:Name="Host"
                            TextElement.Foreground="#FFCCEFFF" RenderTransformOrigin="0.5,0.5"
                            noesis:Text.Stroke="#FF49A4FF" noesis:Text.StrokeThickness="4.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Border>
                </Border>
            </ControlTemplate>
            <Style x:Key="Style.Button.Start" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="FontSize" Value="36"/>
                <Setter Property="Template" Value="{StaticResource Template.Button.Start}"/>
            </Style>

            <Style x:Key="Style.Text.ScoreFade" TargetType="TextBlock">
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource Color.LightBlue}"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="ScoreFade">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.Opacity)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseIn"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="2">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="2">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="{StaticResource NoesisLogoBg}">
        <Viewbox>
            <StackPanel Margin="20">
                <TextBlock TextAlignment="Center" FontSize="64" Foreground="White"
                    noesis:Text.Stroke="#FFFFFFFF" noesis:Text.StrokeThickness="6.5">
                    <Span Foreground="{StaticResource Brush.Player1.Hi}">Tic</Span>
                    <Span Foreground="{StaticResource Brush.LightBlue}">Tac</Span>
                    <Span Foreground="{StaticResource Brush.Player2.Hi}">Toe</Span>
                </TextBlock>
                <Grid Margin="0,-5,0,15">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#FF255D8D" Offset="0.513"/>
                            <GradientStop Color="#00255D8D" Offset="1"/>
                            <GradientStop Color="#00255D8D"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,2">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Resources>
                                    <Storyboard x:Key="Show">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="{x:Null}">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-60"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="Hide">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="{x:Null}">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="60">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Style.Resources>
                                <Setter Property="Opacity" Value="0"/>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEnabled, ElementName=StartButton}" Value="False">
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource Hide}"/>
                                        </DataTrigger.ExitActions>
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource Show}"/>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="Who is playing: " Foreground="{StaticResource ResourceKey=Brush.LightBlue}" FontSize="16"/>
                        <TextBlock Text="{Binding PlayerPlaying}" FontSize="16">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Resources>
                                        <Storyboard x:Key="Show">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="{x:Null}">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="{x:Null}">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </Style.Resources>
                                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlayerPlayingChanged}" Value="True">
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource Show}"/>
                                            </DataTrigger.ExitActions>
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource Show}"/>
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </Grid>
                <Grid Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.RowSpan="3" Grid.ColumnSpan="3" Background="#0CFFFFFF" CornerRadius="10"/>
                    <Rectangle Width="3" Fill="White" Grid.RowSpan="3" Grid.Column="0" HorizontalAlignment="Right" Margin="0,0,-1,0"/>
                    <Rectangle Width="3" Fill="White" Grid.RowSpan="3" Grid.Column="2" HorizontalAlignment="Left" Margin="-1,0,0,0"/>
                    <Rectangle Height="3" Fill="White" Grid.ColumnSpan="3" Grid.Row="0" VerticalAlignment="Bottom" Margin="0,0,0,-1"/>
                    <Rectangle Height="3" Fill="White" Grid.ColumnSpan="3" Grid.Row="2" VerticalAlignment="Top" Margin="0,-1,0,0"/>
                    <UniformGrid Grid.RowSpan="3" Grid.ColumnSpan="3" Rows="3" Columns="3" Style="{StaticResource Style.Board}">
                        <ToggleButton DataContext="{Binding Board[0]}" IsChecked="{Binding IsChecked}" Style="{StaticResource Style.Cell}"/>
                        <ToggleButton DataContext="{Binding Board[1]}" IsChecked="{Binding IsChecked}" Style="{StaticResource Style.Cell}"/>
                        <ToggleButton DataContext="{Binding Board[2]}" IsChecked="{Binding IsChecked}" Style="{StaticResource Style.Cell}"/>
                        <ToggleButton DataContext="{Binding Board[3]}" IsChecked="{Binding IsChecked}" Style="{StaticResource Style.Cell}"/>
                        <ToggleButton DataContext="{Binding Board[4]}" IsChecked="{Binding IsChecked}" Style="{StaticResource Style.Cell}"/>
                        <ToggleButton DataContext="{Binding Board[5]}" IsChecked="{Binding IsChecked}" Style="{StaticResource Style.Cell}"/>
                        <ToggleButton DataContext="{Binding Board[6]}" IsChecked="{Binding IsChecked}" Style="{StaticResource Style.Cell}"/>
                        <ToggleButton DataContext="{Binding Board[7]}" IsChecked="{Binding IsChecked}" Style="{StaticResource Style.Cell}"/>
                        <ToggleButton DataContext="{Binding Board[8]}" IsChecked="{Binding IsChecked}" Style="{StaticResource Style.Cell}"/>
                    </UniformGrid>
                    <Button x:Name="StartButton" Grid.ColumnSpan="3" Grid.RowSpan="3" Content="Start Game" Command="{Binding StartGame}"
                            Style="{StaticResource Style.Button.Start}"/>
                </Grid>
                <UniformGrid Columns="3" Margin="0,20,0,0">
                    <StackPanel Margin="8,0">
                        <Border Background="{StaticResource Brush.Player1}" CornerRadius="8,8,0,0" Padding="0,8">
                            <TextBlock Text="Player1" FontSize="20" HorizontalAlignment="Center"/>
                        </Border>
                        <Border CornerRadius="0,0,8,8" Background="White" BorderThickness="2,0,2,2" BorderBrush="{StaticResource Brush.Player1}">
                            <Grid>
                                <TextBlock Text="{Binding ScorePlayer1, FallbackValue=0}" HorizontalAlignment="Center" FontSize="48">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Style.Text.ScoreFade}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ScorePlayer1Changed}" Value="True">
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource ScoreFade}"/>
                                                    </DataTrigger.ExitActions>
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource ScoreFade}"/>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="{Binding ScorePlayer1, FallbackValue=0}" HorizontalAlignment="Center" FontSize="48" Foreground="{StaticResource Brush.DarkBlue}"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                    <StackPanel Margin="8,0">
                        <Border Background="{StaticResource Brush.LightBlue}" CornerRadius="8,8,0,0" Padding="0,8">
                            <TextBlock Text="Ties" HorizontalAlignment="Center" FontSize="20"/>
                        </Border>
                        <Border CornerRadius="0,0,8,8" Background="White" BorderThickness="2,0,2,2" BorderBrush="{StaticResource Brush.LightBlue}">
                            <Grid>
                                <TextBlock Text="{Binding ScoreTies, FallbackValue=0}" HorizontalAlignment="Center" FontSize="48">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Style.Text.ScoreFade}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ScoreTiesChanged}" Value="True">
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource ScoreFade}"/>
                                                    </DataTrigger.ExitActions>
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource ScoreFade}"/>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="{Binding ScoreTies, FallbackValue=0}" HorizontalAlignment="Center" FontSize="48" Foreground="{StaticResource Brush.DarkBlue}"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                    <StackPanel Margin="8,0">
                        <Border Background="{StaticResource Brush.Player2}" CornerRadius="8,8,0,0" Padding="0,8">
                            <TextBlock Text="Player2" HorizontalAlignment="Center" FontSize="20"/>
                        </Border>
                        <Border CornerRadius="0,0,8,8" Background="White" BorderThickness="2,0,2,2" BorderBrush="{StaticResource Brush.Player2}">
                            <Grid>
                                <TextBlock Text="{Binding ScorePlayer2, FallbackValue=0}" HorizontalAlignment="Center" FontSize="48">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Style.Text.ScoreFade}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ScorePlayer2Changed}" Value="True">
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource ScoreFade}"/>
                                                    </DataTrigger.ExitActions>
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource ScoreFade}"/>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="{Binding ScorePlayer2, FallbackValue=0}" HorizontalAlignment="Center" FontSize="48" Foreground="{StaticResource Brush.DarkBlue}"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                </UniformGrid>
            </StackPanel>
        </Viewbox>
    </Grid>
</UserControl>
